plugins {
	id 'java'
}

group = 'com.finni'
version = '2.1'

repositories {
	mavenCentral()
	maven {
		name = "papermc-repo"
		url = "https://repo.papermc.io/repository/maven-public/"
	}
	maven {
		name = "essentials-snapshots"
		url = "https://repo.essentialsx.net/snapshots/"
	}
	maven {
		name = "jitpack"
		url = "https://jitpack.io/"
	}
}

dependencies {
	compileOnly  "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"
	implementation  "org.javacord:javacord:3.8.0"
	compileOnly  "net.essentialsx:EssentialsXDiscordLink:2.20.1-SNAPSHOT"
	compileOnly  "net.essentialsx:EssentialsXDiscord:2.20.1-SNAPSHOT"
	compileOnly  "net.essentialsx:EssentialsX:2.20.1-SNAPSHOT"
	//compileOnly  "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
	compileOnly  "org.realityforge.org.jetbrains.annotations:org.jetbrains.annotations:1.7.0"
	compileOnly  "org.apache.logging.log4j:log4j-core:2.20.0"
}

def targetJavaVersion = 17
java {
	def javaVersion = JavaVersion.toVersion( targetJavaVersion )
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
	if( JavaVersion.current() < javaVersion )
	{
		toolchain.languageVersion = JavaLanguageVersion.of( targetJavaVersion )
	}
}

tasks.withType( JavaCompile ).configureEach {
	if( targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible() )
	{
		options.release = targetJavaVersion
	}
}

processResources {
	def props = [version: version]
	inputs.properties props
	filteringCharset 'UTF-8'
	filesMatching( 'plugin.yml' ) {
		expand props
	}
}

jar {
	from (configurations.runtimeClasspath.collect { entry -> zipTree(entry) }) {
		exclude 'META-INF/MANIFEST.MF'
		exclude 'META-INF/*.SF'
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
	}
	duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

task cleanAndJarAndCopyJarToPluginFolder(dependsOn: ['clean', 'jar']) {
	copy {
		from 'build/libs/DiscordModBot-' + version + ".jar"
		into new File( pluginFolderPath ).absolutePath
	}
}